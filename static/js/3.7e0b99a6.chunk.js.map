{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/User/User.module.css","components/Dialogs/User/User.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","User","props","path","id","className","s","user","to","userName","Message","message","maxLength100","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","Dialogs","componentUsers","users","map","el","key","componentMessage","messages","dialogs","userMessages","values","sendMes","newMessageText","console","log","compose","connect","state","dialogsPage","dialogUsers","dialogMessages","dispatch","sendMessageActionCreator","withAuthRedirect"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,uICaVC,EATF,SAACC,GACZ,IAAMC,EAAO,YAAcD,EAAME,GACjC,OACE,yBAAKC,UAAWC,IAAEC,MAChB,kBAAC,IAAD,CAASC,GAAIL,GAAOD,EAAMO,YCGjBC,G,OARC,SAACR,GACf,OACE,6BACE,6BAAMA,EAAMS,Y,kCCCZC,EAAeC,YAAiB,KAUhCC,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EATL,SAACb,GACjB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,kBAACC,EAAA,EAAD,CAAOC,YAAY,uGAAuBC,UAAWC,IAAUC,KAAK,iBAAiBC,SAAU,CAACC,IAAUb,KAC1G,gHA4BGc,EArBC,SAACxB,GACb,IAIMyB,EAAiBzB,EAAM0B,MAAMC,KAAI,SAACC,GAAD,OACnC,kBAAC,EAAD,CAAMrB,SAAUqB,EAAGrB,SAAUsB,IAAKD,EAAG1B,GAAIA,GAAI0B,EAAG1B,QAE9C4B,EAAmB9B,EAAM+B,SAASJ,KAAI,SAACC,GAAD,OACxC,kBAAC,EAAD,CAAS1B,GAAI0B,EAAG1B,GAAI2B,IAAKD,EAAG1B,GAAIO,QAASmB,EAAGnB,aAGhD,OACI,yBAAKN,UAAWC,IAAE4B,SACd,yBAAK7B,UAAWC,IAAEsB,OAAQD,GAC1B,yBAAKtB,UAAWC,IAAE6B,cAAeH,GACjC,kBAAClB,EAAD,CAAkBG,SAfZ,SAACmB,GACXlC,EAAMmC,QAAQD,EAAOE,gBACrBC,QAAQC,IAAIJ,Q,uBCCLK,sBACbC,aAhBoB,SAACC,GACrB,MAAO,CACLL,eAAgBK,EAAMC,YAAYN,eAClCV,MAAOe,EAAMC,YAAYC,YACzBZ,SAAUU,EAAMC,YAAYE,mBAGP,SAACC,GACxB,MAAO,CACLV,QAAS,SAACC,GACRS,EAASC,YAAyBV,SAOtCW,IAFaR,CAGbf","file":"static/js/3.7e0b99a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3m7xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__41cT3\"};","import React from \"react\";\r\nimport s from \"./User.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Dialogs from \"../Dialogs\";\r\n\r\nconst User = (props) => {\r\n  const path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.user}>\r\n      <NavLink to={path}>{props.userName}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport s from \"./Message.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>\r\n      <div>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport User from \"./User/User\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormContols\";\r\nimport {maxLengthCreator, required} from \"../common/validators\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder='Введите сообщение...' component={Textarea} name='newMessageText' validate={[required, maxLength100]}/>\r\n            <button>Опубликовать</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: 'dialogs'})(DialogsForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let sendMes = (values) => {\r\n        props.sendMes(values.newMessageText);\r\n        console.log(values);\r\n    };\r\n    const componentUsers = props.users.map((el) => (\r\n        <User userName={el.userName} key={el.id} id={el.id}/>\r\n    ));\r\n    const componentMessage = props.messages.map((el) => (\r\n        <Message id={el.id} key={el.id} message={el.message}/>\r\n    ));\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.users}>{componentUsers}</div>\r\n            <div className={s.userMessages}>{componentMessage}</div>\r\n            <DialogsReduxForm onSubmit={sendMes}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {\r\n  sendMessageActionCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/authRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n    users: state.dialogsPage.dialogUsers,\r\n    messages: state.dialogsPage.dialogMessages,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMes: (newMessageText) => {\r\n      dispatch(sendMessageActionCreator(newMessageText));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}